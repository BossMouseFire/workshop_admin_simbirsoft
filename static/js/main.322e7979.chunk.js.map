{"version":3,"sources":["components/authPage/authPage.module.scss","assets/logo.svg","utils/utils.ts","api/api.ts","components/authPage/authForm.tsx","components/authPage/authPage.tsx","routes/publicRoute.tsx","routes/privateRoute.tsx","components/adminPage/adminPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","tokenEncoder","token","btoa","getRandomString","result","Math","random","toString","substring","instanceApiFactory","axios","create","baseURL","headers","authCheck","name","parts","document","cookie","split","length","partsPop","pop","shift","getCookie","get","Authorization","AuthForm","errorRef","useState","loginLocal","setLoginLocal","password","setPassword","loginLocalInputRef","useRef","passwordInputRef","history","useHistory","className","styles","formAuth","formAuthName","blockInputData","placeholder","onChange","e","target","value","current","classList","contains","errorInput","remove","ref","type","blockActions","onClick","add","email","post","username","login","then","response","typeToken","data","token_type","toUpperCase","slice","val","date","Date","setTime","getTime","toUTCString","setCookie","access_token","go","catch","errorAuthActive","AuthPage","authPage","blockAuth","blockName","src","logo","alt","errorAuth","PublicRoute","children","isAuthenticated","path","render","location","to","pathname","state","from","PrivateRoute","AdminPage","App","stateIsAuthenticated","useEffect","getStateAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,4BAA4B,UAAY,4BAA4B,SAAW,2BAA2B,aAAe,+BAA+B,eAAiB,iCAAiC,WAAa,6BAA6B,aAAe,+BAA+B,UAAY,4BAA4B,gBAAkB,oC,wICDjZ,MAA0B,iC,QCA5BC,EAAe,WAC1B,IAAMC,EAAQC,KAAK,GAAD,OAAIC,IAAJ,gBAClB,MAAM,SAAN,OAAgBF,IAGZE,EAAkB,WAEtB,IADA,IAAIC,EAAS,IACLA,GACNA,EAASC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAEhD,OAAOJ,GCNHK,E,OAAqBC,EAAMC,OAAO,CACtCC,QAAS,0CACTC,QAAS,CACP,+BAAgC,2BAChC,8BAA+B,OAgBtBC,EAAY,WACvB,IAAMb,EDHiB,SAACc,GACxB,IACMC,GADQ,KAAOC,SAASC,QACVC,MAAM,KAAOJ,EAAO,KAExC,GAAoB,GAAhBC,EAAMI,OAAa,CACrB,IAAMC,EAAWL,EAAMM,MACvB,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAUF,MAAM,KAAKI,SCHhBC,CAAU,eACxB,OAAIvB,EACKQ,EAAmBgB,IAAI,cAAe,CAC3CZ,QAAS,CAAEa,cAAezB,KAGvB,M,OCqDM0B,EA1EuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvC,EAAoCC,mBAAiB,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAiB,IAAjD,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EACJC,mBACIC,EAAmBD,mBACnBE,EAAUC,cAwChB,OACE,sBAAKC,UAAWC,IAAOC,SAAvB,UACE,sBAAMF,UAAWC,IAAOE,aAAxB,sCACA,sBAAKH,UAAWC,IAAOG,eAAvB,UACE,kEACA,uBACEC,YAAa,4EACbC,SA7Ca,SAACC,GACpBf,EAAce,EAAEC,OAAOC,OACnBd,EAAmBe,QAAQC,UAAUC,SAASX,IAAOY,aACvDlB,EAAmBe,QAAQC,UAAUG,OAAOb,IAAOY,aA2C/CE,IAAKpB,OAGT,sBAAKK,UAAWC,IAAOG,eAAvB,UACE,wEACA,uBACEY,KAAM,WACNX,YAAa,kFACbC,SA/CiB,SAACC,GACxBb,EAAYa,EAAEC,OAAOC,OACjBZ,EAAiBa,QAAQC,UAAUC,SAASX,IAAOY,aACrDhB,EAAiBa,QAAQC,UAAUG,OAAOb,IAAOY,aA6C7CE,IAAKlB,OAGT,sBAAKG,UAAWC,IAAOgB,aAAvB,UACE,8HACA,qBAAKC,QA9CK,WACT3B,GACHI,EAAmBe,QAAQC,UAAUQ,IAAIlB,IAAOY,YAE7CpB,GACHI,EAAiBa,QAAQC,UAAUQ,IAAIlB,IAAOY,YAE5CtB,GAAcE,GD3BD,SAAC2B,EAAe3B,GACnC,OAAOvB,EAAmBmD,KACxB,cACA,CAAEC,SAAUF,EAAO3B,YACnB,CACEnB,QAAS,CACPa,cAAe1B,OCsBjB8D,CAAMhC,EAAYE,GACf+B,MAAK,SAACC,GACL,IAAMC,EACJD,EAASE,KAAKC,WAAW,GAAGC,cAC5BJ,EAASE,KAAKC,WAAWE,MAAM,IF/BlB,SAACtD,EAAcuD,GACtC,IAAMC,EAAO,IAAIC,KACXxB,EAAQsB,EAEdC,EAAKE,QAAQF,EAAKG,UAAY,QAE9BzD,SAASC,OAAT,UAAqBH,EAArB,YAA6BiC,EAA7B,qBAA+CuB,EAAKI,cAApD,YE2BQC,CAAU,cADC,UAAMX,EAAN,YAAmBD,EAASE,KAAKW,eAE5CxC,EAAQyC,GAAG,MAEZC,OAAM,WACLnD,EAASqB,QAAQC,UAAUQ,IAAIlB,IAAOwC,iBACtC9C,EAAmBe,QAAQC,UAAUQ,IAAIlB,IAAOY,YAChDhB,EAAiBa,QAAQC,UAAUQ,IAAIlB,IAAOY,gBA0BhD,mDCvDO6B,EAlBY,WACzB,IAAMrD,EAAWO,mBACjB,OACE,sBAAKI,UAAWC,IAAO0C,SAAvB,UACE,sBAAK3C,UAAWC,IAAO2C,UAAvB,UACE,sBAAK5C,UAAWC,IAAO4C,UAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAK,+CACrB,qDAEF,cAAC,EAAD,CAAU3D,SAAUA,OAEtB,qBAAKW,UAAWC,IAAOgD,UAAWlC,IAAK1B,EAAvC,oYCQS6D,EApBuB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,KAClE,OACE,cAAC,IAAD,CACEA,KAAMA,EACNC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACLH,EAGC,cAAC,IAAD,CACEI,GAAI,CACFC,SAAU,SACVC,MAAO,CAAEC,KAAMJ,MALnBJ,MCiBKS,EAvBwB,SAAC,GAIjC,IAHLT,EAGI,EAHJA,SACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,KAEA,OACE,cAAC,IAAD,CACEA,KAAMA,EACNC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNH,EACED,EAEA,cAAC,IAAD,CACEK,GAAI,CACFC,SAAU,SACVC,MAAO,CAAEC,KAAMJ,UCTdM,EARG,WAChB,OACE,8BACE,oKC2BSC,EAxBO,WACpB,MAAgDxE,oBAAkB,GAAlE,mBAAO8D,EAAP,KAAwBW,EAAxB,KAEAC,qBAAU,WACRC,MACC,CAACb,IAEJ,IAAMa,EAAe,WAAO,IAAD,EAChB,QAAT,EAAA1F,WAAA,SACIiD,MAAK,kBAAMuC,GAAqB,MACjCvB,OAAM,kBAAMuB,GAAqB,OAEtC,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAaV,KAAM,SAAUD,gBAAiBA,EAA9C,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAcC,KAAM,SAAUD,gBAAiBA,EAA/C,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUI,GAAI,eCdLU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCFdO,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJjG,SAASkG,eAAe,SAM1BV,M","file":"static/js/main.322e7979.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPage\":\"authPage_authPage__1mJjn\",\"blockAuth\":\"authPage_blockAuth__1Pnxh\",\"blockName\":\"authPage_blockName__2sABb\",\"formAuth\":\"authPage_formAuth__yj3ay\",\"formAuthName\":\"authPage_formAuthName__3hbZc\",\"blockInputData\":\"authPage_blockInputData__3Oft0\",\"errorInput\":\"authPage_errorInput__kWXmD\",\"blockActions\":\"authPage_blockActions__FkpIw\",\"errorAuth\":\"authPage_errorAuth__1nTS3\",\"errorAuthActive\":\"authPage_errorAuthActive__2mU9v\"};","export default __webpack_public_path__ + \"static/media/logo.bc4f3ee8.svg\";","export const tokenEncoder = (): string => {\n  const token = btoa(`${getRandomString()}:4cbcea96de`);\n  return `Basic ${token}`;\n};\n\nconst getRandomString = (): string => {\n  let result = '';\n  while (!result) {\n    result = Math.random().toString(36).substring(7);\n  }\n  return result;\n};\n\nexport const setCookie = (name: string, val: string) => {\n  const date = new Date();\n  const value = val;\n\n  date.setTime(date.getTime() + 7 * 24 * 60 * 60 * 1000);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;\n};\n\nexport const getCookie = (name: string) => {\n  const value = '; ' + document.cookie;\n  const parts = value.split('; ' + name + '=');\n\n  if (parts.length == 2) {\n    const partsPop = parts.pop();\n    return partsPop?.split(';').shift();\n  }\n};\n\nexport const deleteCookie = (name: string) => {\n  const date = new Date();\n\n  date.setTime(date.getTime() + -1 * 24 * 60 * 60 * 1000);\n\n  document.cookie = name + '=; expires=' + date.toUTCString() + '; path=/';\n};\n","import axios from 'axios';\nimport { getCookie, tokenEncoder } from '../utils/utils';\nimport { IRequestLogin } from '../types/api';\n\nconst instanceApiFactory = axios.create({\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\n  headers: {\n    'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\n    'Access-Control-Allow-Origin': '*',\n  },\n});\n\nexport const login = (email: string, password: string) => {\n  return instanceApiFactory.post<IRequestLogin>(\n    '/auth/login',\n    { username: email, password },\n    {\n      headers: {\n        Authorization: tokenEncoder(),\n      },\n    }\n  );\n};\n\nexport const authCheck = () => {\n  const token = getCookie('accessToken');\n  if (token) {\n    return instanceApiFactory.get('/auth/check', {\n      headers: { Authorization: token },\n    });\n  }\n  return null;\n};\n","import React, { ChangeEvent, useRef, useState } from 'react';\nimport styles from './authPage.module.scss';\nimport { login } from '../../api/api';\nimport { setCookie } from '../../utils/utils';\nimport { useHistory } from 'react-router-dom';\n\ninterface IAuthForm {\n  errorRef: React.MutableRefObject<HTMLInputElement>;\n}\n\nconst AuthForm: React.FC<IAuthForm> = ({ errorRef }) => {\n  const [loginLocal, setLoginLocal] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const loginLocalInputRef =\n    useRef() as React.MutableRefObject<HTMLInputElement>;\n  const passwordInputRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const history = useHistory();\n\n  const onChangeMail = (e: ChangeEvent<HTMLInputElement>) => {\n    setLoginLocal(e.target.value);\n    if (loginLocalInputRef.current.classList.contains(styles.errorInput)) {\n      loginLocalInputRef.current.classList.remove(styles.errorInput);\n    }\n  };\n\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n    if (passwordInputRef.current.classList.contains(styles.errorInput)) {\n      passwordInputRef.current.classList.remove(styles.errorInput);\n    }\n  };\n\n  const onLogin = () => {\n    if (!loginLocal) {\n      loginLocalInputRef.current.classList.add(styles.errorInput);\n    }\n    if (!password) {\n      passwordInputRef.current.classList.add(styles.errorInput);\n    }\n    if (loginLocal && password) {\n      login(loginLocal, password)\n        .then((response) => {\n          const typeToken =\n            response.data.token_type[0].toUpperCase() +\n            response.data.token_type.slice(1);\n          const token = `${typeToken} ${response.data.access_token}`;\n          setCookie('accessToken', token);\n          history.go(0);\n        })\n        .catch(() => {\n          errorRef.current.classList.add(styles.errorAuthActive);\n          loginLocalInputRef.current.classList.add(styles.errorInput);\n          passwordInputRef.current.classList.add(styles.errorInput);\n        });\n    }\n  };\n  return (\n    <div className={styles.formAuth}>\n      <span className={styles.formAuthName}>Вход</span>\n      <div className={styles.blockInputData}>\n        <span>Логин</span>\n        <input\n          placeholder={'Введите почту'}\n          onChange={onChangeMail}\n          ref={loginLocalInputRef}\n        />\n      </div>\n      <div className={styles.blockInputData}>\n        <span>Пароль</span>\n        <input\n          type={'password'}\n          placeholder={'Введите пароль'}\n          onChange={onChangePassword}\n          ref={passwordInputRef}\n        />\n      </div>\n      <div className={styles.blockActions}>\n        <div>Запросить доступ</div>\n        <div onClick={onLogin}>Войти</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import React, { useRef } from 'react';\nimport styles from './authPage.module.scss';\nimport logo from '../../assets/logo.svg';\nimport AuthForm from './authForm';\n\nconst AuthPage: React.FC = () => {\n  const errorRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n  return (\n    <div className={styles.authPage}>\n      <div className={styles.blockAuth}>\n        <div className={styles.blockName}>\n          <img src={logo} alt={'Логотип'} />\n          <span>Need for drive</span>\n        </div>\n        <AuthForm errorRef={errorRef} />\n      </div>\n      <div className={styles.errorAuth} ref={errorRef}>\n        Произола ошибка при авторизации. Проверьте данные и попробуйте заново.\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IProps } from '../types/route';\n\nconst PublicRoute: React.FC<IProps> = ({ children, isAuthenticated, path }) => {\n  return (\n    <Route\n      path={path}\n      render={({ location }) =>\n        !isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/admin',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IProps } from '../types/route';\n\nconst PrivateRoute: React.FC<IProps> = ({\n  children,\n  isAuthenticated,\n  path,\n}) => {\n  return (\n    <Route\n      path={path}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from 'react';\n\nconst AdminPage = () => {\n  return (\n    <div>\n      <h1>Страница администрации</h1>\n    </div>\n  );\n};\n\nexport default AdminPage;\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport AuthPage from './components/authPage/authPage';\nimport PublicRoute from './routes/publicRoute';\nimport PrivateRoute from './routes/privateRoute';\nimport AdminPage from './components/adminPage/adminPage';\nimport { authCheck } from './api/api';\n\nconst App: React.FC = () => {\n  const [isAuthenticated, stateIsAuthenticated] = useState<boolean>(false);\n\n  useEffect(() => {\n    getStateAuth();\n  }, [isAuthenticated]);\n\n  const getStateAuth = () => {\n    authCheck()\n      ?.then(() => stateIsAuthenticated(true))\n      .catch(() => stateIsAuthenticated(false));\n  };\n  return (\n    <Switch>\n      <PublicRoute path={'/login'} isAuthenticated={isAuthenticated}>\n        <AuthPage />\n      </PublicRoute>\n      <PrivateRoute path={'/admin'} isAuthenticated={isAuthenticated}>\n        <AdminPage />\n      </PrivateRoute>\n      <Redirect to={'/login'} />\n    </Switch>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}