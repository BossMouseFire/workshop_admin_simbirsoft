{"version":3,"sources":["components/authPage/authPage.module.scss","types/auth.ts","assets/logo.svg","utils/utils.ts","api/api.ts","hooks/useTypeSelector.ts","components/authPage/authForm.tsx","store/actionCreators/auth.ts","components/authPage/authPage.tsx","routes/publicRoute.tsx","routes/privateRoute.tsx","components/adminPage/adminPage.tsx","App.tsx","reportWebVitals.ts","store/reducers/authReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","AuthActionTypes","tokenEncoder","token","btoa","getRandomString","result","Math","random","toString","substring","setCookie","name","value","date","Date","setTime","getTime","document","cookie","toUTCString","instanceApiFactory","axios","create","baseURL","headers","loginRequest","email","password","post","username","Authorization","authCheck","parts","split","length","partsPop","pop","shift","getCookie","get","Error","useTypeSelector","useSelector","cx","cnBind","bind","styles","AuthForm","useState","loginLocal","setLoginLocal","setPassword","loginStateError","setLoginStateError","passwordStateError","setPasswordStateError","dispatch","useDispatch","state","auth","loading","error","useEffect","className","formAuth","formAuthName","blockInputData","placeholder","cn","errorInput","onChange","e","target","type","blockActions","disableButtonLogin","onClick","login","a","AUTH_LOADING","response","typeToken","data","token_type","toUpperCase","slice","access_token","AUTH_LOGIN_SUCCESS","payload","isAuthenticated","dataAuth","AUTH_LOGIN_ERROR","formAuthLoading","loader","AuthPage","authPage","blockAuth","blockName","src","logo","alt","errorAuth","errorAuthActive","PublicRoute","children","path","render","location","to","pathname","from","PrivateRoute","AdminPage","App","AUTH_CHECK_SUCCESS","AUTH_CHECK_ERROR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f0ae5c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPage\":\"authPage_authPage__1mJjn\",\"blockAuth\":\"authPage_blockAuth__1Pnxh\",\"blockName\":\"authPage_blockName__2sABb\",\"formAuth\":\"authPage_formAuth__yj3ay\",\"formAuthName\":\"authPage_formAuthName__3hbZc\",\"blockInputData\":\"authPage_blockInputData__3Oft0\",\"errorInput\":\"authPage_errorInput__kWXmD\",\"blockActions\":\"authPage_blockActions__FkpIw\",\"disableButtonLogin\":\"authPage_disableButtonLogin__1rEEf\",\"formAuthLoading\":\"authPage_formAuthLoading__1gYU8\",\"errorAuth\":\"authPage_errorAuth__1nTS3\",\"errorAuthActive\":\"authPage_errorAuthActive__2mU9v\",\"loader\":\"authPage_loader__3_8AJ\"};","export interface IRequestAuth {\n  token_type: string;\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n  user_id: string;\n}\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  dataAuth: IRequestAuth;\n  loading: boolean;\n  error: null | string;\n}\n\nexport enum AuthActionTypes {\n  AUTH_LOADING = 'AUTH_LOADING',\n  AUTH_LOGIN_SUCCESS = 'AUTH_LOGIN_SUCCESS',\n  AUTH_LOGIN_ERROR = 'AUTH_ERROR',\n  AUTH_CHECK_SUCCESS = 'AUTH_CHECK_SUCCESS',\n  AUTH_CHECK_ERROR = 'AUTH_CHECK_ERROR',\n}\n\ninterface AuthLoadingAction {\n  type: AuthActionTypes.AUTH_LOADING;\n}\n\ninterface AuthLoginSuccessAction {\n  type: AuthActionTypes.AUTH_LOGIN_SUCCESS;\n  payload: {\n    isAuthenticated: boolean;\n    dataAuth: IRequestAuth;\n  };\n}\n\ninterface AuthLoginErrorAction {\n  type: AuthActionTypes.AUTH_LOGIN_ERROR;\n  payload: any;\n}\n\ninterface AuthCheckSuccessAction {\n  type: AuthActionTypes.AUTH_CHECK_SUCCESS;\n}\n\ninterface AuthCheckErrorAction {\n  type: AuthActionTypes.AUTH_CHECK_ERROR;\n}\n\nexport type AuthAction =\n  | AuthLoadingAction\n  | AuthLoginSuccessAction\n  | AuthLoginErrorAction\n  | AuthCheckSuccessAction\n  | AuthCheckErrorAction;\n","export default __webpack_public_path__ + \"static/media/logo.bc4f3ee8.svg\";","export const tokenEncoder = (): string => {\n  const token = btoa(`${getRandomString()}:4cbcea96de`);\n  return `Basic ${token}`;\n};\n\nconst getRandomString = (): string => {\n  let result = '';\n  while (!result) {\n    result = Math.random().toString(36).substring(7);\n  }\n  return result;\n};\n\nexport const setCookie = (name: string, value: string) => {\n  const date = new Date();\n\n  date.setTime(date.getTime() + 7 * 24 * 60 * 60 * 1000);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;\n};\n\nexport const getCookie = (name: string) => {\n  const value = '; ' + document.cookie;\n  const parts = value.split('; ' + name + '=');\n\n  if (parts.length == 2) {\n    const partsPop = parts.pop();\n    return partsPop?.split(';').shift();\n  }\n};\n\nexport const deleteCookie = (name: string) => {\n  const date = new Date();\n\n  date.setTime(date.getTime() + -1 * 24 * 60 * 60 * 1000);\n\n  document.cookie = name + '=; expires=' + date.toUTCString() + '; path=/';\n};\n","import axios from 'axios';\nimport { getCookie, tokenEncoder } from '../utils/utils';\nimport { IRequestAuth } from '../types/auth';\n\nconst instanceApiFactory = axios.create({\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\n  headers: {\n    'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\n    'Access-Control-Allow-Origin': '*',\n  },\n});\n\nexport const loginRequest = (email: string, password: string) => {\n  return instanceApiFactory.post<IRequestAuth>(\n    '/auth/login',\n    { username: email, password },\n    {\n      headers: {\n        Authorization: tokenEncoder(),\n      },\n    }\n  );\n};\n\nexport const authCheck = () => {\n  const token = getCookie('accessToken');\n  if (token) {\n    return instanceApiFactory.get('/auth/check', {\n      headers: { Authorization: token },\n    });\n  }\n  throw new Error('Получен пустой токен');\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\n\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport styles from './authPage.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../store/actionCreators/auth';\nimport { useTypeSelector } from '../../hooks/useTypeSelector';\nimport cn from 'classnames';\nimport cnBind from 'classnames/bind';\nconst cx = cnBind.bind(styles);\n\nconst AuthForm: React.FC = () => {\n  const [loginLocal, setLoginLocal] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [loginStateError, setLoginStateError] = useState<boolean>(false);\n  const [passwordStateError, setPasswordStateError] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  const { loading, error } = useTypeSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (error) {\n      setLoginStateError(true);\n      setPasswordStateError(true);\n    }\n  }, [error]);\n\n  const onChangeMail = (e: ChangeEvent<HTMLInputElement>) => {\n    setLoginLocal(e.target.value);\n    if (loginStateError) {\n      setLoginStateError(false);\n    }\n  };\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n    if (passwordStateError) {\n      setPasswordStateError(false);\n    }\n  };\n\n  const onLogin = () => {\n    if (!loginLocal) {\n      setLoginStateError(true);\n    }\n    if (!password) {\n      setPasswordStateError(true);\n    }\n    if (loginLocal && password) {\n      dispatch(login(loginLocal, password));\n    }\n  };\n  return (\n    <div className={styles.formAuth}>\n      <span className={styles.formAuthName}>Вход</span>\n      <div className={styles.blockInputData}>\n        <span>Логин</span>\n        <input\n          placeholder={'Введите логин'}\n          className={cn(cx({ errorInput: loginStateError }))}\n          onChange={onChangeMail}\n        />\n      </div>\n      <div className={styles.blockInputData}>\n        <span>Пароль</span>\n        <input\n          type={'password'}\n          placeholder={'Введите пароль'}\n          className={cn(cx({ errorInput: passwordStateError }))}\n          onChange={onChangePassword}\n        />\n      </div>\n      <div className={styles.blockActions}>\n        <div>Запросить доступ</div>\n        <div\n          className={cn(cx({ disableButtonLogin: loading }))}\n          onClick={onLogin}\n        >\n          Войти\n        </div>\n      </div>\n      {loading && (\n        <div className={styles.formAuthLoading}>\n          <div className={styles.loader}>\n            <div />\n            <div />\n            <div />\n            <div />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import { Dispatch } from 'redux';\nimport { AuthAction, AuthActionTypes } from '../../types/auth';\nimport { authCheck, loginRequest } from '../../api/api';\nimport { setCookie } from '../../utils/utils';\n\nexport const login = (login: string, password: string) => {\n  return async (dispatch: Dispatch<AuthAction>) => {\n    try {\n      dispatch({ type: AuthActionTypes.AUTH_LOADING });\n      const response = await loginRequest(login, password);\n\n      const typeToken =\n        response.data.token_type[0].toUpperCase() +\n        response.data.token_type.slice(1);\n      const token = `${typeToken} ${response.data.access_token}`;\n      setCookie('accessToken', token);\n\n      dispatch({\n        type: AuthActionTypes.AUTH_LOGIN_SUCCESS,\n        payload: {\n          isAuthenticated: true,\n          dataAuth: response.data,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: AuthActionTypes.AUTH_LOGIN_ERROR,\n        payload: error,\n      });\n    }\n  };\n};\n\nexport const getStateAuth = () => {\n  return async (dispatch: Dispatch<AuthAction>) => {\n    try {\n      dispatch({ type: AuthActionTypes.AUTH_LOADING });\n      await authCheck();\n      dispatch({\n        type: AuthActionTypes.AUTH_CHECK_SUCCESS,\n      });\n    } catch (error) {\n      dispatch({\n        type: AuthActionTypes.AUTH_CHECK_ERROR,\n      });\n    }\n  };\n};\n","import React from 'react';\nimport styles from './authPage.module.scss';\nimport logo from '../../assets/logo.svg';\nimport AuthForm from './authForm';\nimport cn from 'classnames';\nimport cnBind from 'classnames/bind';\nimport { useTypeSelector } from '../../hooks/useTypeSelector';\nconst cx = cnBind.bind(styles);\n\nconst AuthPage: React.FC = () => {\n  const { error } = useTypeSelector((state) => state.auth);\n  return (\n    <div className={styles.authPage}>\n      <div className={styles.blockAuth}>\n        <div className={styles.blockName}>\n          <img src={logo} alt={'Логотип'} />\n          <span>Need for drive</span>\n        </div>\n        <AuthForm />\n      </div>\n      <div className={cn(styles.errorAuth, cx({ errorAuthActive: error }))}>\n        Произола ошибка при авторизации. Проверьте данные и попробуйте заново.\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IProps } from '../types/route';\n\nconst PublicRoute: React.FC<IProps> = ({ children, isAuthenticated, path }) => {\n  return (\n    <Route\n      path={path}\n      render={({ location }) =>\n        !isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/admin',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IProps } from '../types/route';\n\nconst PrivateRoute: React.FC<IProps> = ({\n  children,\n  isAuthenticated,\n  path,\n}) => {\n  return (\n    <Route\n      path={path}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from 'react';\n\nconst AdminPage = () => {\n  return (\n    <div>\n      <h1>Страница администрации</h1>\n    </div>\n  );\n};\n\nexport default AdminPage;\n","import React, { useEffect } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport AuthPage from './components/authPage/authPage';\nimport PublicRoute from './routes/publicRoute';\nimport PrivateRoute from './routes/privateRoute';\nimport AdminPage from './components/adminPage/adminPage';\nimport { useDispatch } from 'react-redux';\nimport { useTypeSelector } from './hooks/useTypeSelector';\nimport { getStateAuth } from './store/actionCreators/auth';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useTypeSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(getStateAuth());\n  }, [isAuthenticated]);\n\n  return (\n    <Switch>\n      <PublicRoute path={'/login'} isAuthenticated={isAuthenticated}>\n        <AuthPage />\n      </PublicRoute>\n      <PrivateRoute path={'/admin'} isAuthenticated={isAuthenticated}>\n        <AdminPage />\n      </PrivateRoute>\n      <Redirect to={'/login'} />\n    </Switch>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  AuthAction,\n  AuthActionTypes,\n  AuthState,\n  IRequestAuth,\n} from '../../types/auth';\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  dataAuth: {} as IRequestAuth,\n  loading: false,\n  error: null,\n};\n\nexport const authReducer = (\n  state = initialState,\n  action: AuthAction\n): AuthState => {\n  switch (action.type) {\n    case AuthActionTypes.AUTH_LOADING:\n      return { ...state, loading: true };\n    case AuthActionTypes.AUTH_LOGIN_SUCCESS:\n      return {\n        isAuthenticated: action.payload.isAuthenticated,\n        dataAuth: action.payload.dataAuth,\n        loading: false,\n        error: null,\n      };\n    case AuthActionTypes.AUTH_LOGIN_ERROR:\n      return {\n        isAuthenticated: false,\n        dataAuth: {} as IRequestAuth,\n        loading: false,\n        error: action.payload,\n      };\n    case AuthActionTypes.AUTH_CHECK_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case AuthActionTypes.AUTH_CHECK_ERROR:\n      return {\n        isAuthenticated: false,\n        dataAuth: {} as IRequestAuth,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\n// const composeEnhancers =\n//   // @ts-ignore\n//   (window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose) || compose;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}